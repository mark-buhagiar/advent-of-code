const { performance } = require("../lib/performance");

const mapInput = [
  "....#...#####..##.#..##..#....#",
  "..##.#.#.........#.#......##...",
  "#.#.#.##.##...#.......#...#..#.",
  "..##.............#.#.##.....#..",
  "##......#.............#....#...",
  ".....##..#.....##.#.......##..#",
  ".##.....#........##...##.#....#",
  ".##......#.#......#.....#..##.#",
  "##....#..#...#...#...##.#...##.",
  "##........##.#...##......#.#.#.",
  "..#.#........#...##.....#.....#",
  "..#.......####.#....#..#####...",
  ".##..#..#..##.#.....###.#..#...",
  "......###..##.....#.#.#..###.#.",
  "..#.#...#..##.....#....#.#.....",
  ".....#.#...#.###.#..#..........",
  "##.....#...#.#....#..#.#.......",
  "..#...#...#.........##......#..",
  "......#.#...#...#..#...##.#...#",
  "....#.................##.##....",
  "...#......#.............#....##",
  "##..#..#..........#...##.#.#...",
  "....#...##....#..#.#...........",
  "##.#.#.#...#....#........#..#.#",
  "...###..........#...#...#..##.#",
  "..##.......###.#......##.##....",
  "...........#.#....#.....#.#...#",
  "..#......##.#...##.#.#......#.#",
  "..........#.#....#.#..#....#...",
  "##..##...##.......#.#....#.#.##",
  ".##..#.#..#...........#.#...#.#",
  "#......##......#....####.#....#",
  "..###......##...#...#.#.......#",
  ".#.##.##....##..#..##...#......",
  ".#....#..#........#..#.##.#.#..",
  "..#.........#.#.###....###.#...",
  "..#..#.#.#..#..#.##.##...####..",
  "#..#..#......#..#.#....#.#.#.##",
  "..#.........#...#..#.#.#..#...#",
  "#..#......###.....##....##.....",
  "#..#.....#.#.#.##.....##...#.#.",
  "##..#.#...#.........#.#........",
  "#....#.......#.....#..#..#.#...",
  "...###.##.###.###.#####..#...#.",
  ".....#..#.#..##...............#",
  "..#.....###.###.#.....#.#....##",
  "###.#.........#..#.#.#..#.#..#.",
  ".##.........#..#..##....#.#...#",
  ".#...#........#...#.....#....#.",
  "####..........###....#.#.#....#",
  "....##..###....#....#.#...#....",
  "..............##......##..#.###",
  ".#...........###.#.#....#......",
  "###.#..#..#...#.........##.....",
  "..#.....##...#.#.....##...#.##.",
  ".###.#........#..#.#...#.#..##.",
  ".......##....##.........##.#..#",
  "#....#...#...##...#.#..#..#..##",
  "...#...##..#...#...#.#....#.#.#",
  "#.#......#.#...##......#.#...##",
  ".#.###..#.###.#.....#.##.##.#.#",
  "#...#............#...#.##..##..",
  "....#..###.......#.....##....#.",
  ".#####..#.....#.....#...#.....#",
  "..##..#..###.......##.#........",
  ".#...##.##.....#.##...##...#..#",
  "......###...#....#....#........",
  "....#...#.#....#...#.#.#......#",
  "....#..##...##.#..#....###.....",
  "...#...#..#.#...#....#.#..#####",
  "####....#.....#.........#.#....",
  "...###.#.#..#.#..##............",
  ".##..#####..#...#..#..#.......#",
  ".###......#.#.#..#....#.....#..",
  "#....##.##..#.#...............#",
  "...#.#..#........#......#....#.",
  "#.....#....###....#..#.#.#.....",
  ".#..#....#...#.#.....##....#...",
  "..#.##.#.##.#..#.##.#.....#.#..",
  ".......#.......###..###..#...#.",
  ".#.......#..#........#.#.......",
  ".#.#...#.....#.##..##.....#....",
  "#.......##....#......#.....##..",
  ".#.....#...##...#..##.....#....",
  "....#..#.#.......#.#.#.........",
  "..#....#....##.##..#..##.##.#..",
  ".#...#....##...#........#....#.",
  "#.#......#...#....#...........#",
  ".#....#..#..###.#.....#..#.....",
  "..#..................#.....#...",
  "..#...###..#..####.#..#.#.#.#..",
  "...#........##...##..##..#....#",
  "...#.....#........##..#.....#.#",
  "#....#.....##.##......#...##...",
  "...#####....#..##..##...#.#....",
  "###.........#.#..#..#..##.#...#",
  "##...#..##...#.##.#........#...",
  ".#....#.#...#..#...#..#.#......",
  ".#......##.#...#...#..#....#...",
  "#..#.#.#......##.##.####..#....",
  ".#...#.#.##...##.#...#...#.....",
  "####.#.........#...##..##....##",
  ".....###........###.##...#.#...",
  ".##.....#.....#....##.....##...",
  ".#.#...#####....##...##.....#..",
  "....###..........#......##..#.#",
  "..#.....#....#..#...#.....##..#",
  "...##.##.#.######....#.#....##.",
  "...#.#.#...#..#....##.........#",
  ".#.#...##...#....#.#....##.....",
  "...#..#.....#.....#.##.....#...",
  ".#.#.#.....#.##.#....#.#....##.",
  "#...#......###...#..###...#....",
  "...##.#.#..#........##.......#.",
  ".####.####......#........#.....",
  "....#..#####....#......####....",
  "#...##.#..#..#####.#...#......#",
  "#.#....#..#.........###........",
  ".##.........#....#......#.#....",
  "...###.........####.#........##",
  "..#..#........#.#..##......#..#",
  ".##..#....#...##.####.#...#....",
  "......#.......#..#..#.#.##.#...",
  ".###....#.#...#.#.......##..#.#",
  "#...#....#............#####....",
  "...#.##......#####..#........#.",
  "..#...##.....#...#..#.#........",
  "...#.#...#...##...#..#....#....",
  "..#..##.....#....#.#.###.......",
  ".......##..#...#.............##",
  ".....#.....#..##.##.....#......",
  ".....##...#......#..##....#.###",
  ".#...#.#.#.#.##.....##..###..#.",
  "....##..........#.....###......",
  "....#...#.#.#..#.......#....#..",
  "..###...#...........##..###....",
  "...#.##.......#....#....#.#....",
  "##...#..##..#.##..........##..#",
  ".##.....#..#......##..####.#.##",
  "....##..#.#.###......#..#...#..",
  "####..#.#....#...#....###.#.#..",
  "###......#...##.##..#.##..#..#.",
  "..#.#..#.#.#.....#...#..#.####.",
  ".###.#...##...##....##......#.#",
  "..#............#.##..#....#..#.",
  "###.......#......###..#........",
  "....##......###.....#.#..###...",
  "..#...##...#......#..#.........",
  "#..####.#....#.....###....#.#..",
  ".#.#.#.......##....###.........",
  ".......#.##.#####....#.#...####",
  ".#...#....#....#.###..#.....#..",
  ".###.#.#.###.###.#..####.##.#..",
  "....#.........#.#.......##.....",
  "#..#..#.#...........#.#.##..#.#",
  ".#.....#..#...#.....#.##......#",
  "..###.#............#.....####..",
  "#.....##..##...#....####....#..",
  "...#.....#..................#..",
  "....#.###.#..#..#..##..#..##...",
  "...##.#........#......#...##...",
  "#................##....#...#...",
  "..##......##.#.##..#....#.....#",
  ".#..#.....#..........##.#.#....",
  ".....#...####....#..#......#...",
  "..#......###.#.#.#.#.......#..#",
  ".##......#.......#....###.#....",
  "#..#.#.#..#...#.#.##..##..#....",
  "....#...##..#.#......#.##...#..",
  "...###...#.##..#...#....#......",
  "##......#.#...#.#.#.........#..",
  "..#..........#...###.#.##....#.",
  "...##.....#.....#...###..#.....",
  "..####.#.....#.#.....#..#.#....",
  ".#.....##...##.##.#.....#.####.",
  ".......#.....#...##..........#.",
  ".#...#.#....#####....###.#..#.#",
  ".##.##....##...##.#.....#......",
  "#......#.##..#..##.#.#.......#.",
  ".#..#....###..#........##...#..",
  "..#......##.......###..##...#..",
  ".#..........#.#.......##.....#.",
  "....##.....##.#.#.##........##.",
  "..#.#..###..#..##...#.##...#...",
  ".......#.....#..#...#...#.....#",
  "##.#...#.#.#.##........#......#",
  "..###.....##..#....#.......##..",
  "#####..####...#.#..##.#...#..#.",
  "#...####....#........#....#....",
  ".#.#.#..#...##....#.......#.#..",
  "...#....##..##..#..#..#####.###",
  "...#......#.#..#......#...####.",
  ".##.....##.##.#.####.#..##...#.",
  "....#..#..##..##....#....#...##",
  "##.###........#...##....#.....#",
  "..#.#.#.......#....#..#....#...",
  "......##.....##....#...#.....#.",
  "#.#..#.#.......#....#.#.#......",
  ".....###..#...#.....#..##..#...",
  "......###.....#.#.#...#...##..#",
  ".#..#.#....##...#...#........#.",
  "#..###.#...####.#...#..........",
  ".#.##.#..#..##..#..###..##...#.",
  ".......#.#..........#.........#",
  "#......###..##..#....###.......",
  "..#............#.#........#...#",
  "..##.#.............#......#..##",
  ".#....#..#.#..#....###..#...#..",
  "....##....#..##...###....#....#",
  ".#....###.............#........",
  "#..#...#..#....#.##.#.....##...",
  "...........#.....#....#....#...",
  ".##.##.#...#....##......##..##.",
  "......#.#.##.#..##........#...#",
  "....##...##...#...#...#.#......",
  ".#...#....#...#......#.#...#..#",
  "........##.....#.#..#...##..##.",
  "##...#.....#.....####...#..#...",
  ".#.#..##.##......#...#.#...#...",
  "##...##.#......#....#.######.#.",
  "##.....####.###......#.##.#....",
  ".#.##....##........#...#..####.",
  ".......#..#....##...#.#...#..#.",
  "...##..........#..#........#..#",
  ".##.....#...#...#.##.###.......",
  ".##....#...#.#..#.....#...#....",
  "..#...#.....#.####.#.........#.",
  "#...#.##...#.#..#.#..#.###.#..#",
  ".##..#.#.##.........####....###",
  ".#..##........#..#.......#.....",
  "......#.#####.#.........#.#...#",
  "......#....#.#####...........#.",
  "..##....##..#.#..#....#......##",
  "#.#......#.##.#.##....#....#.#.",
  "..#..##.#...#.......##.........",
  ".....##.#...#..........#.......",
  "...#........#..#...#.....##.###",
  "....##.........#...#.#.....#...",
  ".......#.#....#...#.......#...#",
  ".#..#...##....#..#...........#.",
  ".#....##.##.#..#..####.#.#.....",
  ".##........#.....#..#......##..",
  ".#..##......#......#..##..#....",
  "###.....##.......#..##.#.......",
  ".....##......#.#...##...##.....",
  ".##....##..#..#####...#...#.##.",
  "##...##.#....##.#.#.#....##....",
  ".#.....#...#......#......##....",
  "##.#............#...#....#.....",
  "#..#.....#.....##.##.##..#..##.",
  "......#..............#..#...#.#",
  "....#.#....##......#..#...#....",
  ".#...#..#...#......#..##....#.#",
  ".....#......#..##...#.#....#...",
  "#...............#.##..#......#.",
  ".....#..##.#..#.#...###.....#..",
  "...#..#..#...#....#..#..##.#...",
  ".#...#...#..#......##...#......",
  "....###............#.#.#....#..",
  "#.#...#..#..#.#....#........#..",
  "....#.#.#..#..#....#..#...##.#.",
  ".#....#.#...#....#......#.#...#",
  "##..#.#.#..#.....#...###....#.#",
  ".##.....#.#...#..........#..#.#",
  "#....#......#....#.#.#...#.....",
  "#.#.....#.###.......#..#..#.#..",
  "#.....##..#.###...#...##...#.##",
  ".#.##....#.#.....##......###...",
  ".#.......##................#...",
  ".........#........####......#..",
  "...##.###..#.....#.#.....##.#..",
  "..#....#.#.#.##..........#.....",
  "#..##.....#.............##.....",
  ".##...#..#.......#.......#..#..",
  "...#.................#......##.",
  "....#....#.....#..###.#....###.",
  "..#.#..#...#..#.....###....#.#.",
  ".....###...#....#....#.#.##..##",
  "...#...#.........####........#.",
  ".......#..##.........#.........",
  ".#......##.....#.#####...##....",
  "....#.###...#.#....##..#......#",
  ".##..#....#.#....#..#.###.....#",
  "..#...#.#...#.##.....#.#....##.",
  "#.#.#.#.....##...#.#..##..#....",
  ".#............#.#.#..#...#...#.",
  "...##.#..#..####.#.###..##.....",
  ".##.....#.......#..##.#...##.#.",
  "#.#...#..#.##...##...####..#..#",
  "...##.......#.#.#.#.#.#...#..##",
  "...#.#.##..##..............###.",
  ".....#...#........#...#......#.",
  "..#..#..##....#..##.#.....#....",
  "#.....##........#.........##.#.",
  "###..#....#.##..##.............",
  ".#..#...#.#......#..#..##.....#",
  "...#.#.#............##........#",
  "..#.#....#..#....##....#...##.#",
  "...##...#...#..........##.#####",
  "....#..#.#.......##....#.#.###.",
  "##..#..#..#...###.#.....#......",
  "....###.#.#.#.##..##.#...#.....",
  ".....####..#.#..#.#......#.#.#.",
  "#.....#...#..#.#.........#..#..",
  ".##....#.#.####......##..#..##.",
  "......#.##.#.#..#..#....#.#....",
  ".#..#...#...#...#..#.....#.....",
  "..##.#..............#......#...",
  ".....###.##.......#.....#..#...",
  "..#.#..#..#.......#...##.##..#.",
  "##.###......#......#.#..#..##..",
  "..##.....#..#..#......#..#.....",
  "...##.......#.#..#.........#.#.",
  "......##.##.#.......#..#.#.....",
  "#......#........##..#.......#.#",
  "###....#...#...#.#...#..#..#...",
  "#..###....#....####..#...#.....",
  "....##..#.##.#....#..##...#.#..",
  "#.##..#....##..#...#..#.#.#..#.",
  "#.........#.....#...#.......#..",
  "...#.....#.#.....#........##...",
  "..#.##..#......#...#.....##.#..",
  "...###....#.....#...#..#.##..#.",
];

const stepInput = [
  { xStep: 1, yStep: 1 },
  { xStep: 3, yStep: 1 },
  { xStep: 5, yStep: 1 },
  { xStep: 7, yStep: 1 },
  { xStep: 1, yStep: 2 },
];

function checkSlope({ xStep, yStep }) {
  let treeCount = 0;
  let currX = 0;
  let currY = 0;

  while (currY < mapInput.length - 1) {
    currX += xStep;
    currY += yStep;
    const row = mapInput[currY];
    if (row[currX % row.length] == "#") treeCount++;
  }
  return treeCount;
}

function doWork(){
  let total = 1;
  stepInput.forEach((step) => {
    total *= checkSlope(step);
  });
  return total;
}

performance.mark("processing-start");
console.log(doWork());
performance.measure("execution-measure", "processing-start");
